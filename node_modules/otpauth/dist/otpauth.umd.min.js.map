{"version":3,"file":"otpauth.umd.min.js","sources":["../src/utils/encoding/uint.js","../node_modules/jssha/dist/sha.mjs","../src/utils/global-this.js","../src/utils/is-node.js","../src/utils/node-require.js","../src/utils/crypto/hmac-digest.js","../src/utils/pad.js","../src/utils/encoding/base32.js","../src/utils/encoding/hex.js","../src/utils/encoding/latin1.js","../src/utils/encoding/utf8.js","../src/utils/crypto/random-bytes.js","../src/secret.js","../src/utils/crypto/timing-safe-equal.js","../src/hotp.js","../src/totp.js","../src/uri.js","../src/version.js"],"sourcesContent":["/**\n * Converts an integer to an ArrayBuffer.\n * @param {number} num Integer.\n * @returns {ArrayBuffer} ArrayBuffer.\n */\nconst uintToBuf = (num) => {\n\tconst buf = new ArrayBuffer(8);\n\tconst arr = new Uint8Array(buf);\n\tlet acc = num;\n\n\tfor (let i = 7; i >= 0; i--) {\n\t\tif (acc === 0) break;\n\t\tarr[i] = acc & 255;\n\t\tacc -= arr[i];\n\t\tacc /= 256;\n\t}\n\n\treturn buf;\n};\n\n/**\n * Converts an ArrayBuffer to an integer.\n * @param {ArrayBuffer} buf ArrayBuffer.\n * @returns {number} Integer.\n */\nconst uintFromBuf = (buf) => {\n\tconst arr = new Uint8Array(buf);\n\tlet num = 0;\n\n\tfor (let i = 0; i < arr.length; i++) {\n\t\tif (arr[i] !== 0) {\n\t\t\tnum *= 256;\n\t\t\tnum += arr[i];\n\t\t}\n\t}\n\n\treturn num;\n};\n\nexport { uintToBuf, uintFromBuf };\n","/**\n * A JavaScript implementation of the SHA family of hashes - defined in FIPS PUB 180-4, FIPS PUB 202,\n * and SP 800-185 - as well as the corresponding HMAC implementation as defined in FIPS PUB 198-1.\n *\n * Copyright 2008-2020 Brian Turek, 1998-2009 Paul Johnston & Contributors\n * Distributed under the BSD License\n * See http://caligatio.github.com/jsSHA/ for more information\n */\nconst t=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";function n(t,n,e,r){let i,s,o;const h=n||[0],u=(e=e||0)>>>3,w=-1===r?3:0;for(i=0;i<t.length;i+=1)o=i+u,s=o>>>2,h.length<=s&&h.push(0),h[s]|=t[i]<<8*(w+r*(o%4));return{value:h,binLen:8*t.length+e}}function e(e,r,i){switch(r){case\"UTF8\":case\"UTF16BE\":case\"UTF16LE\":break;default:throw new Error(\"encoding must be UTF8, UTF16BE, or UTF16LE\")}switch(e){case\"HEX\":return function(t,n,e){return function(t,n,e,r){let i,s,o,h;if(0!=t.length%2)throw new Error(\"String of HEX type must be in byte increments\");const u=n||[0],w=(e=e||0)>>>3,c=-1===r?3:0;for(i=0;i<t.length;i+=2){if(s=parseInt(t.substr(i,2),16),isNaN(s))throw new Error(\"String of HEX type contains invalid characters\");for(h=(i>>>1)+w,o=h>>>2;u.length<=o;)u.push(0);u[o]|=s<<8*(c+r*(h%4))}return{value:u,binLen:4*t.length+e}}(t,n,e,i)};case\"TEXT\":return function(t,n,e){return function(t,n,e,r,i){let s,o,h,u,w,c,f,a,l=0;const A=e||[0],E=(r=r||0)>>>3;if(\"UTF8\"===n)for(f=-1===i?3:0,h=0;h<t.length;h+=1)for(s=t.charCodeAt(h),o=[],128>s?o.push(s):2048>s?(o.push(192|s>>>6),o.push(128|63&s)):55296>s||57344<=s?o.push(224|s>>>12,128|s>>>6&63,128|63&s):(h+=1,s=65536+((1023&s)<<10|1023&t.charCodeAt(h)),o.push(240|s>>>18,128|s>>>12&63,128|s>>>6&63,128|63&s)),u=0;u<o.length;u+=1){for(c=l+E,w=c>>>2;A.length<=w;)A.push(0);A[w]|=o[u]<<8*(f+i*(c%4)),l+=1}else for(f=-1===i?2:0,a=\"UTF16LE\"===n&&1!==i||\"UTF16LE\"!==n&&1===i,h=0;h<t.length;h+=1){for(s=t.charCodeAt(h),!0===a&&(u=255&s,s=u<<8|s>>>8),c=l+E,w=c>>>2;A.length<=w;)A.push(0);A[w]|=s<<8*(f+i*(c%4)),l+=2}return{value:A,binLen:8*l+r}}(t,r,n,e,i)};case\"B64\":return function(n,e,r){return function(n,e,r,i){let s,o,h,u,w,c,f,a=0;const l=e||[0],A=(r=r||0)>>>3,E=-1===i?3:0,H=n.indexOf(\"=\");if(-1===n.search(/^[a-zA-Z0-9=+/]+$/))throw new Error(\"Invalid character in base-64 string\");if(n=n.replace(/=/g,\"\"),-1!==H&&H<n.length)throw new Error(\"Invalid '=' found in base-64 string\");for(o=0;o<n.length;o+=4){for(w=n.substr(o,4),u=0,h=0;h<w.length;h+=1)s=t.indexOf(w.charAt(h)),u|=s<<18-6*h;for(h=0;h<w.length-1;h+=1){for(f=a+A,c=f>>>2;l.length<=c;)l.push(0);l[c]|=(u>>>16-8*h&255)<<8*(E+i*(f%4)),a+=1}}return{value:l,binLen:8*a+r}}(n,e,r,i)};case\"BYTES\":return function(t,n,e){return function(t,n,e,r){let i,s,o,h;const u=n||[0],w=(e=e||0)>>>3,c=-1===r?3:0;for(s=0;s<t.length;s+=1)i=t.charCodeAt(s),h=s+w,o=h>>>2,u.length<=o&&u.push(0),u[o]|=i<<8*(c+r*(h%4));return{value:u,binLen:8*t.length+e}}(t,n,e,i)};case\"ARRAYBUFFER\":try{new ArrayBuffer(0)}catch(t){throw new Error(\"ARRAYBUFFER not supported by this environment\")}return function(t,e,r){return function(t,e,r,i){return n(new Uint8Array(t),e,r,i)}(t,e,r,i)};case\"UINT8ARRAY\":try{new Uint8Array(0)}catch(t){throw new Error(\"UINT8ARRAY not supported by this environment\")}return function(t,e,r){return n(t,e,r,i)};default:throw new Error(\"format must be HEX, TEXT, B64, BYTES, ARRAYBUFFER, or UINT8ARRAY\")}}function r(n,e,r,i){switch(n){case\"HEX\":return function(t){return function(t,n,e,r){let i,s,o=\"\";const h=n/8,u=-1===e?3:0;for(i=0;i<h;i+=1)s=t[i>>>2]>>>8*(u+e*(i%4)),o+=\"0123456789abcdef\".charAt(s>>>4&15)+\"0123456789abcdef\".charAt(15&s);return r.outputUpper?o.toUpperCase():o}(t,e,r,i)};case\"B64\":return function(n){return function(n,e,r,i){let s,o,h,u,w,c=\"\";const f=e/8,a=-1===r?3:0;for(s=0;s<f;s+=3)for(u=s+1<f?n[s+1>>>2]:0,w=s+2<f?n[s+2>>>2]:0,h=(n[s>>>2]>>>8*(a+r*(s%4))&255)<<16|(u>>>8*(a+r*((s+1)%4))&255)<<8|w>>>8*(a+r*((s+2)%4))&255,o=0;o<4;o+=1)c+=8*s+6*o<=e?t.charAt(h>>>6*(3-o)&63):i.b64Pad;return c}(n,e,r,i)};case\"BYTES\":return function(t){return function(t,n,e){let r,i,s=\"\";const o=n/8,h=-1===e?3:0;for(r=0;r<o;r+=1)i=t[r>>>2]>>>8*(h+e*(r%4))&255,s+=String.fromCharCode(i);return s}(t,e,r)};case\"ARRAYBUFFER\":try{new ArrayBuffer(0)}catch(t){throw new Error(\"ARRAYBUFFER not supported by this environment\")}return function(t){return function(t,n,e){let r;const i=n/8,s=new ArrayBuffer(i),o=new Uint8Array(s),h=-1===e?3:0;for(r=0;r<i;r+=1)o[r]=t[r>>>2]>>>8*(h+e*(r%4))&255;return s}(t,e,r)};case\"UINT8ARRAY\":try{new Uint8Array(0)}catch(t){throw new Error(\"UINT8ARRAY not supported by this environment\")}return function(t){return function(t,n,e){let r;const i=n/8,s=-1===e?3:0,o=new Uint8Array(i);for(r=0;r<i;r+=1)o[r]=t[r>>>2]>>>8*(s+e*(r%4))&255;return o}(t,e,r)};default:throw new Error(\"format must be HEX, B64, BYTES, ARRAYBUFFER, or UINT8ARRAY\")}}const i=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298],s=[3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428],o=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225],h=\"Chosen SHA variant is not supported\";function u(t,n){let e,r;const i=t.binLen>>>3,s=n.binLen>>>3,o=i<<3,h=4-i<<3;if(i%4!=0){for(e=0;e<s;e+=4)r=i+e>>>2,t.value[r]|=n.value[e>>>2]<<o,t.value.push(0),t.value[r+1]|=n.value[e>>>2]>>>h;return(t.value.length<<2)-4>=s+i&&t.value.pop(),{value:t.value,binLen:t.binLen+n.binLen}}return{value:t.value.concat(n.value),binLen:t.binLen+n.binLen}}function w(t){const n={outputUpper:!1,b64Pad:\"=\",outputLen:-1},e=t||{},r=\"Output length must be a multiple of 8\";if(n.outputUpper=e.outputUpper||!1,e.b64Pad&&(n.b64Pad=e.b64Pad),e.outputLen){if(e.outputLen%8!=0)throw new Error(r);n.outputLen=e.outputLen}else if(e.shakeLen){if(e.shakeLen%8!=0)throw new Error(r);n.outputLen=e.shakeLen}if(\"boolean\"!=typeof n.outputUpper)throw new Error(\"Invalid outputUpper formatting option\");if(\"string\"!=typeof n.b64Pad)throw new Error(\"Invalid b64Pad formatting option\");return n}function c(t,n,r,i){const s=t+\" must include a value and format\";if(!n){if(!i)throw new Error(s);return i}if(void 0===n.value||!n.format)throw new Error(s);return e(n.format,n.encoding||\"UTF8\",r)(n.value)}class f{constructor(t,n,e){const r=e||{};if(this.t=n,this.i=r.encoding||\"UTF8\",this.numRounds=r.numRounds||1,isNaN(this.numRounds)||this.numRounds!==parseInt(this.numRounds,10)||1>this.numRounds)throw new Error(\"numRounds must a integer >= 1\");this.s=t,this.o=[],this.h=0,this.u=!1,this.l=0,this.A=!1,this.H=[],this.S=[]}update(t){let n,e=0;const r=this.p>>>5,i=this.m(t,this.o,this.h),s=i.binLen,o=i.value,h=s>>>5;for(n=0;n<h;n+=r)e+this.p<=s&&(this.C=this.R(o.slice(n,n+r),this.C),e+=this.p);this.l+=e,this.o=o.slice(e>>>5),this.h=s%this.p,this.u=!0}getHash(t,n){let e,i,s=this.U;const o=w(n);if(this.v){if(-1===o.outputLen)throw new Error(\"Output length must be specified in options\");s=o.outputLen}const h=r(t,s,this.K,o);if(this.A&&this.T)return h(this.T(o));for(i=this.F(this.o.slice(),this.h,this.l,this.g(this.C),s),e=1;e<this.numRounds;e+=1)this.v&&s%32!=0&&(i[i.length-1]&=16777215>>>24-s%32),i=this.F(i,s,0,this.B(this.s),s);return h(i)}setHMACKey(t,n,r){if(!this.L)throw new Error(\"Variant does not support HMAC\");if(this.u)throw new Error(\"Cannot set MAC key after calling update\");const i=e(n,(r||{}).encoding||\"UTF8\",this.K);this.M(i(t))}M(t){const n=this.p>>>3,e=n/4-1;let r;if(1!==this.numRounds)throw new Error(\"Cannot set numRounds with MAC\");if(this.A)throw new Error(\"MAC key already set\");for(n<t.binLen/8&&(t.value=this.F(t.value,t.binLen,0,this.B(this.s),this.U));t.value.length<=e;)t.value.push(0);for(r=0;r<=e;r+=1)this.H[r]=909522486^t.value[r],this.S[r]=1549556828^t.value[r];this.C=this.R(this.H,this.C),this.l=this.p,this.A=!0}getHMAC(t,n){const e=w(n);return r(t,this.U,this.K,e)(this.k())}k(){let t;if(!this.A)throw new Error(\"Cannot call getHMAC without first setting MAC key\");const n=this.F(this.o.slice(),this.h,this.l,this.g(this.C),this.U);return t=this.R(this.S,this.B(this.s)),t=this.F(n,this.U,this.p,t,this.U),t}}function a(t,n){return t<<n|t>>>32-n}function l(t,n){return t>>>n|t<<32-n}function A(t,n){return t>>>n}function E(t,n,e){return t^n^e}function H(t,n,e){return t&n^~t&e}function S(t,n,e){return t&n^t&e^n&e}function b(t){return l(t,2)^l(t,13)^l(t,22)}function p(t,n){const e=(65535&t)+(65535&n);return(65535&(t>>>16)+(n>>>16)+(e>>>16))<<16|65535&e}function d(t,n,e,r){const i=(65535&t)+(65535&n)+(65535&e)+(65535&r);return(65535&(t>>>16)+(n>>>16)+(e>>>16)+(r>>>16)+(i>>>16))<<16|65535&i}function m(t,n,e,r,i){const s=(65535&t)+(65535&n)+(65535&e)+(65535&r)+(65535&i);return(65535&(t>>>16)+(n>>>16)+(e>>>16)+(r>>>16)+(i>>>16)+(s>>>16))<<16|65535&s}function C(t){return l(t,7)^l(t,18)^A(t,3)}function y(t){return l(t,6)^l(t,11)^l(t,25)}function R(t){return[1732584193,4023233417,2562383102,271733878,3285377520]}function U(t,n){let e,r,i,s,o,h,u;const w=[];for(e=n[0],r=n[1],i=n[2],s=n[3],o=n[4],u=0;u<80;u+=1)w[u]=u<16?t[u]:a(w[u-3]^w[u-8]^w[u-14]^w[u-16],1),h=u<20?m(a(e,5),H(r,i,s),o,1518500249,w[u]):u<40?m(a(e,5),E(r,i,s),o,1859775393,w[u]):u<60?m(a(e,5),S(r,i,s),o,2400959708,w[u]):m(a(e,5),E(r,i,s),o,3395469782,w[u]),o=s,s=i,i=a(r,30),r=e,e=h;return n[0]=p(e,n[0]),n[1]=p(r,n[1]),n[2]=p(i,n[2]),n[3]=p(s,n[3]),n[4]=p(o,n[4]),n}function v(t,n,e,r){let i;const s=15+(n+65>>>9<<4),o=n+e;for(;t.length<=s;)t.push(0);for(t[n>>>5]|=128<<24-n%32,t[s]=4294967295&o,t[s-1]=o/4294967296|0,i=0;i<t.length;i+=16)r=U(t.slice(i,i+16),r);return r}class K extends f{constructor(t,n,r){if(\"SHA-1\"!==t)throw new Error(h);super(t,n,r);const i=r||{};this.L=!0,this.T=this.k,this.K=-1,this.m=e(this.t,this.i,this.K),this.R=U,this.g=function(t){return t.slice()},this.B=R,this.F=v,this.C=[1732584193,4023233417,2562383102,271733878,3285377520],this.p=512,this.U=160,this.v=!1,i.hmacKey&&this.M(c(\"hmacKey\",i.hmacKey,this.K))}}function T(t){let n;return n=\"SHA-224\"==t?s.slice():o.slice(),n}function F(t,n){let e,r,s,o,h,u,w,c,f,a,E;const R=[];for(e=n[0],r=n[1],s=n[2],o=n[3],h=n[4],u=n[5],w=n[6],c=n[7],E=0;E<64;E+=1)R[E]=E<16?t[E]:d(l(U=R[E-2],17)^l(U,19)^A(U,10),R[E-7],C(R[E-15]),R[E-16]),f=m(c,y(h),H(h,u,w),i[E],R[E]),a=p(b(e),S(e,r,s)),c=w,w=u,u=h,h=p(o,f),o=s,s=r,r=e,e=p(f,a);var U;return n[0]=p(e,n[0]),n[1]=p(r,n[1]),n[2]=p(s,n[2]),n[3]=p(o,n[3]),n[4]=p(h,n[4]),n[5]=p(u,n[5]),n[6]=p(w,n[6]),n[7]=p(c,n[7]),n}class g extends f{constructor(t,n,r){if(\"SHA-224\"!==t&&\"SHA-256\"!==t)throw new Error(h);super(t,n,r);const i=r||{};this.T=this.k,this.L=!0,this.K=-1,this.m=e(this.t,this.i,this.K),this.R=F,this.g=function(t){return t.slice()},this.B=T,this.F=function(n,e,r,i){return function(t,n,e,r,i){let s,o;const h=15+(n+65>>>9<<4),u=n+e;for(;t.length<=h;)t.push(0);for(t[n>>>5]|=128<<24-n%32,t[h]=4294967295&u,t[h-1]=u/4294967296|0,s=0;s<t.length;s+=16)r=F(t.slice(s,s+16),r);return o=\"SHA-224\"===i?[r[0],r[1],r[2],r[3],r[4],r[5],r[6]]:r,o}(n,e,r,i,t)},this.C=T(t),this.p=512,this.U=\"SHA-224\"===t?224:256,this.v=!1,i.hmacKey&&this.M(c(\"hmacKey\",i.hmacKey,this.K))}}class B{constructor(t,n){this.Y=t,this.N=n}}function L(t,n){let e;return n>32?(e=64-n,new B(t.N<<n|t.Y>>>e,t.Y<<n|t.N>>>e)):0!==n?(e=32-n,new B(t.Y<<n|t.N>>>e,t.N<<n|t.Y>>>e)):t}function M(t,n){let e;return n<32?(e=32-n,new B(t.Y>>>n|t.N<<e,t.N>>>n|t.Y<<e)):(e=64-n,new B(t.N>>>n|t.Y<<e,t.Y>>>n|t.N<<e))}function k(t,n){return new B(t.Y>>>n,t.N>>>n|t.Y<<32-n)}function Y(t,n,e){return new B(t.Y&n.Y^t.Y&e.Y^n.Y&e.Y,t.N&n.N^t.N&e.N^n.N&e.N)}function N(t){const n=M(t,28),e=M(t,34),r=M(t,39);return new B(n.Y^e.Y^r.Y,n.N^e.N^r.N)}function I(t,n){let e,r;e=(65535&t.N)+(65535&n.N),r=(t.N>>>16)+(n.N>>>16)+(e>>>16);const i=(65535&r)<<16|65535&e;e=(65535&t.Y)+(65535&n.Y)+(r>>>16),r=(t.Y>>>16)+(n.Y>>>16)+(e>>>16);return new B((65535&r)<<16|65535&e,i)}function X(t,n,e,r){let i,s;i=(65535&t.N)+(65535&n.N)+(65535&e.N)+(65535&r.N),s=(t.N>>>16)+(n.N>>>16)+(e.N>>>16)+(r.N>>>16)+(i>>>16);const o=(65535&s)<<16|65535&i;i=(65535&t.Y)+(65535&n.Y)+(65535&e.Y)+(65535&r.Y)+(s>>>16),s=(t.Y>>>16)+(n.Y>>>16)+(e.Y>>>16)+(r.Y>>>16)+(i>>>16);return new B((65535&s)<<16|65535&i,o)}function z(t,n,e,r,i){let s,o;s=(65535&t.N)+(65535&n.N)+(65535&e.N)+(65535&r.N)+(65535&i.N),o=(t.N>>>16)+(n.N>>>16)+(e.N>>>16)+(r.N>>>16)+(i.N>>>16)+(s>>>16);const h=(65535&o)<<16|65535&s;s=(65535&t.Y)+(65535&n.Y)+(65535&e.Y)+(65535&r.Y)+(65535&i.Y)+(o>>>16),o=(t.Y>>>16)+(n.Y>>>16)+(e.Y>>>16)+(r.Y>>>16)+(i.Y>>>16)+(s>>>16);return new B((65535&o)<<16|65535&s,h)}function x(t,n){return new B(t.Y^n.Y,t.N^n.N)}function _(t){const n=M(t,19),e=M(t,61),r=k(t,6);return new B(n.Y^e.Y^r.Y,n.N^e.N^r.N)}function O(t){const n=M(t,1),e=M(t,8),r=k(t,7);return new B(n.Y^e.Y^r.Y,n.N^e.N^r.N)}function P(t){const n=M(t,14),e=M(t,18),r=M(t,41);return new B(n.Y^e.Y^r.Y,n.N^e.N^r.N)}const V=[new B(i[0],3609767458),new B(i[1],602891725),new B(i[2],3964484399),new B(i[3],2173295548),new B(i[4],4081628472),new B(i[5],3053834265),new B(i[6],2937671579),new B(i[7],3664609560),new B(i[8],2734883394),new B(i[9],1164996542),new B(i[10],1323610764),new B(i[11],3590304994),new B(i[12],4068182383),new B(i[13],991336113),new B(i[14],633803317),new B(i[15],3479774868),new B(i[16],2666613458),new B(i[17],944711139),new B(i[18],2341262773),new B(i[19],2007800933),new B(i[20],1495990901),new B(i[21],1856431235),new B(i[22],3175218132),new B(i[23],2198950837),new B(i[24],3999719339),new B(i[25],766784016),new B(i[26],2566594879),new B(i[27],3203337956),new B(i[28],1034457026),new B(i[29],2466948901),new B(i[30],3758326383),new B(i[31],168717936),new B(i[32],1188179964),new B(i[33],1546045734),new B(i[34],1522805485),new B(i[35],2643833823),new B(i[36],2343527390),new B(i[37],1014477480),new B(i[38],1206759142),new B(i[39],344077627),new B(i[40],1290863460),new B(i[41],3158454273),new B(i[42],3505952657),new B(i[43],106217008),new B(i[44],3606008344),new B(i[45],1432725776),new B(i[46],1467031594),new B(i[47],851169720),new B(i[48],3100823752),new B(i[49],1363258195),new B(i[50],3750685593),new B(i[51],3785050280),new B(i[52],3318307427),new B(i[53],3812723403),new B(i[54],2003034995),new B(i[55],3602036899),new B(i[56],1575990012),new B(i[57],1125592928),new B(i[58],2716904306),new B(i[59],442776044),new B(i[60],593698344),new B(i[61],3733110249),new B(i[62],2999351573),new B(i[63],3815920427),new B(3391569614,3928383900),new B(3515267271,566280711),new B(3940187606,3454069534),new B(4118630271,4000239992),new B(116418474,1914138554),new B(174292421,2731055270),new B(289380356,3203993006),new B(460393269,320620315),new B(685471733,587496836),new B(852142971,1086792851),new B(1017036298,365543100),new B(1126000580,2618297676),new B(1288033470,3409855158),new B(1501505948,4234509866),new B(1607167915,987167468),new B(1816402316,1246189591)];function Z(t){return\"SHA-384\"===t?[new B(3418070365,s[0]),new B(1654270250,s[1]),new B(2438529370,s[2]),new B(355462360,s[3]),new B(1731405415,s[4]),new B(41048885895,s[5]),new B(3675008525,s[6]),new B(1203062813,s[7])]:[new B(o[0],4089235720),new B(o[1],2227873595),new B(o[2],4271175723),new B(o[3],1595750129),new B(o[4],2917565137),new B(o[5],725511199),new B(o[6],4215389547),new B(o[7],327033209)]}function j(t,n){let e,r,i,s,o,h,u,w,c,f,a,l;const A=[];for(e=n[0],r=n[1],i=n[2],s=n[3],o=n[4],h=n[5],u=n[6],w=n[7],a=0;a<80;a+=1)a<16?(l=2*a,A[a]=new B(t[l],t[l+1])):A[a]=X(_(A[a-2]),A[a-7],O(A[a-15]),A[a-16]),c=z(w,P(o),(H=h,S=u,new B((E=o).Y&H.Y^~E.Y&S.Y,E.N&H.N^~E.N&S.N)),V[a],A[a]),f=I(N(e),Y(e,r,i)),w=u,u=h,h=o,o=I(s,c),s=i,i=r,r=e,e=I(c,f);var E,H,S;return n[0]=I(e,n[0]),n[1]=I(r,n[1]),n[2]=I(i,n[2]),n[3]=I(s,n[3]),n[4]=I(o,n[4]),n[5]=I(h,n[5]),n[6]=I(u,n[6]),n[7]=I(w,n[7]),n}class q extends f{constructor(t,n,r){if(\"SHA-384\"!==t&&\"SHA-512\"!==t)throw new Error(h);super(t,n,r);const i=r||{};this.T=this.k,this.L=!0,this.K=-1,this.m=e(this.t,this.i,this.K),this.R=j,this.g=function(t){return t.slice()},this.B=Z,this.F=function(n,e,r,i){return function(t,n,e,r,i){let s,o;const h=31+(n+129>>>10<<5),u=n+e;for(;t.length<=h;)t.push(0);for(t[n>>>5]|=128<<24-n%32,t[h]=4294967295&u,t[h-1]=u/4294967296|0,s=0;s<t.length;s+=32)r=j(t.slice(s,s+32),r);return o=\"SHA-384\"===i?[(r=r)[0].Y,r[0].N,r[1].Y,r[1].N,r[2].Y,r[2].N,r[3].Y,r[3].N,r[4].Y,r[4].N,r[5].Y,r[5].N]:[r[0].Y,r[0].N,r[1].Y,r[1].N,r[2].Y,r[2].N,r[3].Y,r[3].N,r[4].Y,r[4].N,r[5].Y,r[5].N,r[6].Y,r[6].N,r[7].Y,r[7].N],o}(n,e,r,i,t)},this.C=Z(t),this.p=1024,this.U=\"SHA-384\"===t?384:512,this.v=!1,i.hmacKey&&this.M(c(\"hmacKey\",i.hmacKey,this.K))}}const D=[new B(0,1),new B(0,32898),new B(2147483648,32906),new B(2147483648,2147516416),new B(0,32907),new B(0,2147483649),new B(2147483648,2147516545),new B(2147483648,32777),new B(0,138),new B(0,136),new B(0,2147516425),new B(0,2147483658),new B(0,2147516555),new B(2147483648,139),new B(2147483648,32905),new B(2147483648,32771),new B(2147483648,32770),new B(2147483648,128),new B(0,32778),new B(2147483648,2147483658),new B(2147483648,2147516545),new B(2147483648,32896),new B(0,2147483649),new B(2147483648,2147516424)],G=[[0,36,3,41,18],[1,44,10,45,2],[62,6,43,15,61],[28,55,25,21,56],[27,20,39,8,14]];function J(t){let n;const e=[];for(n=0;n<5;n+=1)e[n]=[new B(0,0),new B(0,0),new B(0,0),new B(0,0),new B(0,0)];return e}function Q(t){let n;const e=[];for(n=0;n<5;n+=1)e[n]=t[n].slice();return e}function W(t,n){let e,r,i,s;const o=[],h=[];if(null!==t)for(r=0;r<t.length;r+=2)n[(r>>>1)%5][(r>>>1)/5|0]=x(n[(r>>>1)%5][(r>>>1)/5|0],new B(t[r+1],t[r]));for(e=0;e<24;e+=1){for(s=J(),r=0;r<5;r+=1)o[r]=(u=n[r][0],w=n[r][1],c=n[r][2],f=n[r][3],a=n[r][4],new B(u.Y^w.Y^c.Y^f.Y^a.Y,u.N^w.N^c.N^f.N^a.N));for(r=0;r<5;r+=1)h[r]=x(o[(r+4)%5],L(o[(r+1)%5],1));for(r=0;r<5;r+=1)for(i=0;i<5;i+=1)n[r][i]=x(n[r][i],h[r]);for(r=0;r<5;r+=1)for(i=0;i<5;i+=1)s[i][(2*r+3*i)%5]=L(n[r][i],G[r][i]);for(r=0;r<5;r+=1)for(i=0;i<5;i+=1)n[r][i]=x(s[r][i],new B(~s[(r+1)%5][i].Y&s[(r+2)%5][i].Y,~s[(r+1)%5][i].N&s[(r+2)%5][i].N));n[0][0]=x(n[0][0],D[e])}var u,w,c,f,a;return n}function $(t){let n,e,r=0;const i=[0,0],s=[4294967295&t,t/4294967296&2097151];for(n=6;n>=0;n--)e=s[n>>2]>>>8*n&255,0===e&&0===r||(i[r+1>>2]|=e<<8*(r+1),r+=1);return r=0!==r?r:1,i[0]|=r,{value:r+1>4?i:[i[0]],binLen:8+8*r}}function tt(t){return u($(t.binLen),t)}function nt(t,n){let e,r=$(n);r=u(r,t);const i=n>>>2,s=(i-r.value.length%i)%i;for(e=0;e<s;e++)r.value.push(0);return r.value}class et extends f{constructor(t,n,r){let i=6,s=0;super(t,n,r);const o=r||{};if(1!==this.numRounds){if(o.kmacKey||o.hmacKey)throw new Error(\"Cannot set numRounds with MAC\");if(\"CSHAKE128\"===this.s||\"CSHAKE256\"===this.s)throw new Error(\"Cannot set numRounds for CSHAKE variants\")}switch(this.K=1,this.m=e(this.t,this.i,this.K),this.R=W,this.g=Q,this.B=J,this.C=J(),this.v=!1,t){case\"SHA3-224\":this.p=s=1152,this.U=224,this.L=!0,this.T=this.k;break;case\"SHA3-256\":this.p=s=1088,this.U=256,this.L=!0,this.T=this.k;break;case\"SHA3-384\":this.p=s=832,this.U=384,this.L=!0,this.T=this.k;break;case\"SHA3-512\":this.p=s=576,this.U=512,this.L=!0,this.T=this.k;break;case\"SHAKE128\":i=31,this.p=s=1344,this.U=-1,this.v=!0,this.L=!1,this.T=null;break;case\"SHAKE256\":i=31,this.p=s=1088,this.U=-1,this.v=!0,this.L=!1,this.T=null;break;case\"KMAC128\":i=4,this.p=s=1344,this.I(r),this.U=-1,this.v=!0,this.L=!1,this.T=this.X;break;case\"KMAC256\":i=4,this.p=s=1088,this.I(r),this.U=-1,this.v=!0,this.L=!1,this.T=this.X;break;case\"CSHAKE128\":this.p=s=1344,i=this._(r),this.U=-1,this.v=!0,this.L=!1,this.T=null;break;case\"CSHAKE256\":this.p=s=1088,i=this._(r),this.U=-1,this.v=!0,this.L=!1,this.T=null;break;default:throw new Error(h)}this.F=function(t,n,e,r,o){return function(t,n,e,r,i,s,o){let h,u,w=0;const c=[],f=i>>>5,a=n>>>5;for(h=0;h<a&&n>=i;h+=f)r=W(t.slice(h,h+f),r),n-=i;for(t=t.slice(h),n%=i;t.length<f;)t.push(0);for(h=n>>>3,t[h>>2]^=s<<h%4*8,t[f-1]^=2147483648,r=W(t,r);32*c.length<o&&(u=r[w%5][w/5|0],c.push(u.N),!(32*c.length>=o));)c.push(u.Y),w+=1,0==64*w%i&&(W(null,r),w=0);return c}(t,n,0,r,s,i,o)},o.hmacKey&&this.M(c(\"hmacKey\",o.hmacKey,this.K))}_(t,n){const e=function(t){const n=t||{};return{funcName:c(\"funcName\",n.funcName,1,{value:[],binLen:0}),customization:c(\"Customization\",n.customization,1,{value:[],binLen:0})}}(t||{});n&&(e.funcName=n);const r=u(tt(e.funcName),tt(e.customization));if(0!==e.customization.binLen||0!==e.funcName.binLen){const t=nt(r,this.p>>>3);for(let n=0;n<t.length;n+=this.p>>>5)this.C=this.R(t.slice(n,n+(this.p>>>5)),this.C),this.l+=this.p;return 4}return 31}I(t){const n=function(t){const n=t||{};return{kmacKey:c(\"kmacKey\",n.kmacKey,1),funcName:{value:[1128353099],binLen:32},customization:c(\"Customization\",n.customization,1,{value:[],binLen:0})}}(t||{});this._(t,n.funcName);const e=nt(tt(n.kmacKey),this.p>>>3);for(let t=0;t<e.length;t+=this.p>>>5)this.C=this.R(e.slice(t,t+(this.p>>>5)),this.C),this.l+=this.p;this.A=!0}X(t){const n=u({value:this.o.slice(),binLen:this.h},function(t){let n,e,r=0;const i=[0,0],s=[4294967295&t,t/4294967296&2097151];for(n=6;n>=0;n--)e=s[n>>2]>>>8*n&255,0===e&&0===r||(i[r>>2]|=e<<8*r,r+=1);return r=0!==r?r:1,i[r>>2]|=r<<8*r,{value:r+1>4?i:[i[0]],binLen:8+8*r}}(t.outputLen));return this.F(n.value,n.binLen,this.l,this.g(this.C),t.outputLen)}}export default class{constructor(t,n,e){if(\"SHA-1\"==t)this.O=new K(t,n,e);else if(\"SHA-224\"==t||\"SHA-256\"==t)this.O=new g(t,n,e);else if(\"SHA-384\"==t||\"SHA-512\"==t)this.O=new q(t,n,e);else{if(\"SHA3-224\"!=t&&\"SHA3-256\"!=t&&\"SHA3-384\"!=t&&\"SHA3-512\"!=t&&\"SHAKE128\"!=t&&\"SHAKE256\"!=t&&\"CSHAKE128\"!=t&&\"CSHAKE256\"!=t&&\"KMAC128\"!=t&&\"KMAC256\"!=t)throw new Error(h);this.O=new et(t,n,e)}}update(t){this.O.update(t)}getHash(t,n){return this.O.getHash(t,n)}setHMACKey(t,n,e){this.O.setHMACKey(t,n,e)}getHMAC(t,n){return this.O.getHMAC(t,n)}}\n//# sourceMappingURL=sha.mjs.map\n","/**\n * \"globalThis\" ponyfill.\n * {@link https://mathiasbynens.be/notes/globalthis|A horrifying globalThis polyfill in universal JavaScript}\n * @type {Object.<string, *>}\n*/\nconst globalThis = (() => {\n\t// @ts-ignore\n\tif (typeof globalThis === 'object') return globalThis;\n\telse {\n\t\t// eslint-disable-next-line no-extend-native\n\t\tObject.defineProperty(Object.prototype, '__GLOBALTHIS__', {\n\t\t\tget() { return this; },\n\t\t\tconfigurable: true,\n\t\t});\n\t\ttry {\n\t\t\t// @ts-ignore\n\t\t\t// eslint-disable-next-line no-undef\n\t\t\tif (typeof __GLOBALTHIS__ !== 'undefined') return __GLOBALTHIS__;\n\t\t} finally {\n\t\t\t// @ts-ignore\n\t\t\tdelete Object.prototype.__GLOBALTHIS__;\n\t\t}\n\t}\n\n\t// Still unable to determine \"globalThis\", fall back to a naive method.\n\t/* eslint-disable no-undef, no-restricted-globals */\n\tif (typeof self !== 'undefined') return self;\n\telse if (typeof window !== 'undefined') return window;\n\telse if (typeof global !== 'undefined') return global;\n\t/* eslint-enable */\n\n\treturn undefined;\n})();\n\nexport { globalThis };\n","import { globalThis } from './global-this';\n\n/**\n * Detect if running in Node.js.\n * @type {boolean}\n */\nconst isNode = Object.prototype.toString.call(globalThis.process) === '[object process]';\n\nexport { isNode };\n","import { isNode } from './is-node';\n\n/**\n * Dynamically import Node.js modules (\"eval\" is used to prevent bundlers from including the module).\n * {@link https://github.com/webpack/webpack/issues/8826|webpack/webpack#8826}\n * @param {string} name Module name.\n * @returns {*} Module.\n */\nconst nodeRequire = isNode\n\t// eslint-disable-next-line no-eval\n\t? eval('require')\n\t: () => {};\n\nexport { nodeRequire };\n","import jsSHA from 'jssha';\n\nimport { globalThis } from '../global-this';\nimport { isNode } from '../is-node';\nimport { nodeRequire } from '../node-require';\n\nconst NodeBuffer = isNode ? globalThis.Buffer : undefined;\nconst NodeCrypto = isNode ? nodeRequire('crypto') : undefined;\n\n/**\n * OpenSSL to jsSHA algorithms.\n * @type {Object.<string, string>}\n */\nconst OPENSSL_TO_JSSHA_ALGO = {\n\t'SHA1': 'SHA-1',\n\t'SHA224': 'SHA-224',\n\t'SHA256': 'SHA-256',\n\t'SHA384': 'SHA-384',\n\t'SHA512': 'SHA-512',\n\t'SHA3-224': 'SHA3-224',\n\t'SHA3-256': 'SHA3-256',\n\t'SHA3-384': 'SHA3-384',\n\t'SHA3-512': 'SHA3-512',\n};\n\n/**\n * Calculates an HMAC digest.\n * In Node.js, the command \"openssl list -digest-algorithms\" displays the available digest algorithms.\n * @param {string} algorithm Algorithm.\n * @param {ArrayBuffer} key Key.\n * @param {ArrayBuffer} message Message.\n * @returns {ArrayBuffer} Digest.\n */\nconst hmacDigest = (algorithm, key, message) => {\n\tif (isNode) {\n\t\tconst hmac = NodeCrypto.createHmac(algorithm, NodeBuffer.from(key));\n\t\thmac.update(NodeBuffer.from(message));\n\t\treturn hmac.digest().buffer;\n\t} else {\n\t\tconst variant = OPENSSL_TO_JSSHA_ALGO[algorithm.toUpperCase()];\n\t\tif (typeof variant === 'undefined') {\n\t\t\tthrow new TypeError('Unknown hash function');\n\t\t}\n\t\t// @ts-ignore\n\t\t// eslint-disable-next-line @babel/new-cap\n\t\tconst hmac = new jsSHA(variant, 'ARRAYBUFFER');\n\t\thmac.setHMACKey(key, 'ARRAYBUFFER');\n\t\thmac.update(message);\n\t\treturn hmac.getHMAC('ARRAYBUFFER');\n\t}\n};\n\nexport { hmacDigest };\n","/**\n * Pads a number with leading zeros.\n * @param {number|string} num Number.\n * @param {number} digits Digits.\n * @returns {string} Padded number.\n */\nconst pad = (num, digits) => {\n\tlet prefix = '';\n\tlet repeat = digits - String(num).length;\n\twhile (repeat-- > 0) prefix += '0';\n\treturn `${prefix}${num}`;\n};\n\nexport { pad };\n","/**\n * RFC 4648 base32 alphabet without pad.\n * @type {string}\n */\nconst ALPHABET = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567';\n\n/**\n * Converts a base32 string to an ArrayBuffer (RFC 4648).\n * {@link https://github.com/LinusU/base32-decode|LinusU/base32-decode}\n * @param {string} str Base32 string.\n * @returns {ArrayBuffer} ArrayBuffer.\n */\nconst base32ToBuf = (str) => {\n\t// Canonicalize to all upper case and remove padding if it exists.\n\tconst cstr = str.toUpperCase().replace(/=+$/, '');\n\n\tconst buf = new ArrayBuffer((cstr.length * 5) / 8 | 0);\n\tconst arr = new Uint8Array(buf);\n\tlet bits = 0;\n\tlet value = 0;\n\tlet index = 0;\n\n\tfor (let i = 0; i < cstr.length; i++) {\n\t\tconst idx = ALPHABET.indexOf(cstr[i]);\n\t\tif (idx === -1) throw new TypeError(`Invalid character found: ${cstr[i]}`);\n\n\t\tvalue = (value << 5) | idx;\n\t\tbits += 5;\n\n\t\tif (bits >= 8) {\n\t\t\tarr[index++] = (value >>> bits - 8) & 255;\n\t\t\tbits -= 8;\n\t\t}\n\t}\n\n\treturn buf;\n};\n\n/**\n * Converts an ArrayBuffer to a base32 string (RFC 4648).\n * {@link https://github.com/LinusU/base32-encode|LinusU/base32-encode}\n * @param {ArrayBuffer} buf ArrayBuffer.\n * @returns {string} Base32 string.\n */\nconst base32FromBuf = (buf) => {\n\tconst arr = new Uint8Array(buf);\n\tlet bits = 0;\n\tlet value = 0;\n\tlet str = '';\n\n\tfor (let i = 0; i < arr.length; i++) {\n\t\tvalue = (value << 8) | arr[i];\n\t\tbits += 8;\n\n\t\twhile (bits >= 5) {\n\t\t\tstr += ALPHABET[(value >>> bits - 5) & 31];\n\t\t\tbits -= 5;\n\t\t}\n\t}\n\n\tif (bits > 0) {\n\t\tstr += ALPHABET[(value << 5 - bits) & 31];\n\t}\n\n\treturn str;\n};\n\nexport { base32ToBuf, base32FromBuf };\n","/**\n * Converts a hexadecimal string to an ArrayBuffer.\n * @param {string} str Hexadecimal string.\n * @returns {ArrayBuffer} ArrayBuffer.\n */\nconst hexToBuf = (str) => {\n\tconst buf = new ArrayBuffer(str.length / 2);\n\tconst arr = new Uint8Array(buf);\n\n\tfor (let i = 0; i < str.length; i += 2) {\n\t\tarr[i / 2] = parseInt(str.substr(i, 2), 16);\n\t}\n\n\treturn buf;\n};\n\n/**\n * Converts an ArrayBuffer to a hexadecimal string.\n * @param {ArrayBuffer} buf ArrayBuffer.\n * @returns {string} Hexadecimal string.\n */\nconst hexFromBuf = (buf) => {\n\tconst arr = new Uint8Array(buf);\n\tlet str = '';\n\n\tfor (let i = 0; i < arr.length; i++) {\n\t\tconst hex = arr[i].toString(16);\n\t\tif (hex.length === 1) str += '0';\n\t\tstr += hex;\n\t}\n\n\treturn str.toUpperCase();\n};\n\nexport { hexToBuf, hexFromBuf };\n","/**\n * Converts a Latin-1 string to an ArrayBuffer.\n * @param {string} str Latin-1 string.\n * @returns {ArrayBuffer} ArrayBuffer.\n */\nconst latin1ToBuf = (str) => {\n\tconst buf = new ArrayBuffer(str.length);\n\tconst arr = new Uint8Array(buf);\n\n\tfor (let i = 0; i < str.length; i++) {\n\t\tarr[i] = str.charCodeAt(i) & 0xFF;\n\t}\n\n\treturn buf;\n};\n\n/**\n * Converts an ArrayBuffer to a Latin-1 string.\n * @param {ArrayBuffer} buf ArrayBuffer.\n * @returns {string} Latin-1 string.\n */\nconst latin1FromBuf = (buf) => {\n\tconst arr = new Uint8Array(buf);\n\tlet str = '';\n\n\tfor (let i = 0; i < arr.length; i++) {\n\t\tstr += String.fromCharCode(arr[i]);\n\t}\n\n\treturn str;\n};\n\nexport { latin1ToBuf, latin1FromBuf };\n","import { globalThis } from '../global-this';\n\n/**\n * TextEncoder instance.\n * @type {TextEncoder|null}\n */\nconst ENCODER = globalThis.TextEncoder\n\t? new globalThis.TextEncoder('utf-8')\n\t: null;\n\n/**\n * TextDecoder instance.\n * @type {TextDecoder|null}\n */\nconst DECODER = globalThis.TextDecoder\n\t? new globalThis.TextDecoder('utf-8')\n\t: null;\n\n/**\n * Converts an UTF-8 string to an ArrayBuffer.\n * @param {string} str String.\n * @returns {ArrayBuffer} ArrayBuffer.\n */\nconst utf8ToBuf = (str) => {\n\tif (!ENCODER) {\n\t\tthrow new Error('Encoding API not available');\n\t}\n\n\treturn ENCODER.encode(str).buffer;\n};\n\n/**\n * Converts an ArrayBuffer to an UTF-8 string.\n * @param {ArrayBuffer} buf ArrayBuffer.\n * @returns {string} String.\n */\nconst utf8FromBuf = (buf) => {\n\tif (!DECODER) {\n\t\tthrow new Error('Encoding API not available');\n\t}\n\n\treturn DECODER.decode(buf);\n};\n\nexport { utf8ToBuf, utf8FromBuf };\n","import { globalThis } from '../global-this';\nimport { isNode } from '../is-node';\nimport { nodeRequire } from '../node-require';\n\nconst NodeCrypto = isNode ? nodeRequire('crypto') : undefined;\nconst BrowserCrypto = !isNode ? globalThis.crypto || globalThis.msCrypto : undefined;\n\n/**\n * Returns random bytes.\n * @param {number} size Size.\n * @returns {ArrayBuffer} Random bytes.\n */\nconst randomBytes = (size) => {\n\tif (isNode) {\n\t\treturn NodeCrypto.randomBytes(size).buffer;\n\t} else {\n\t\tif (!BrowserCrypto || !BrowserCrypto.getRandomValues) {\n\t\t\tthrow new Error('Cryptography API not available');\n\t\t}\n\t\treturn BrowserCrypto.getRandomValues(new Uint8Array(size)).buffer;\n\t}\n};\n\nexport { randomBytes };\n","import { base32ToBuf, base32FromBuf } from './utils/encoding/base32';\nimport { hexToBuf, hexFromBuf } from './utils/encoding/hex';\nimport { latin1ToBuf, latin1FromBuf } from './utils/encoding/latin1';\nimport { utf8ToBuf, utf8FromBuf } from './utils/encoding/utf8';\nimport { randomBytes } from './utils/crypto/random-bytes';\n\n/**\n * OTP secret key.\n */\nclass Secret {\n\t/**\n\t * Creates a secret key object.\n\t * @param {Object} [config] Configuration options.\n\t * @param {ArrayBuffer} [config.buffer=randomBytes] Secret key.\n\t * @param {number} [config.size=20] Number of random bytes to generate, ignored if 'buffer' is provided.\n\t */\n\tconstructor({ buffer, size = 20 } = {}) {\n\t\t/**\n\t\t * Secret key.\n\t\t * @type {ArrayBuffer}\n\t\t */\n\t\tthis.buffer = typeof buffer === 'undefined'\n\t\t\t? randomBytes(size)\n\t\t\t: buffer;\n\t}\n\n\t/**\n\t * Converts a Latin-1 string to a Secret object.\n\t * @param {string} str Latin-1 string.\n\t * @returns {Secret} Secret object.\n\t */\n\tstatic fromLatin1(str) {\n\t\treturn new Secret({ buffer: latin1ToBuf(str) });\n\t}\n\n\t/**\n\t * Converts an UTF-8 string to a Secret object.\n\t * @param {string} str UTF-8 string.\n\t * @returns {Secret} Secret object.\n\t */\n\tstatic fromUTF8(str) {\n\t\treturn new Secret({ buffer: utf8ToBuf(str) });\n\t}\n\n\t/**\n\t * Converts a base32 string to a Secret object.\n\t * @param {string} str Base32 string.\n\t * @returns {Secret} Secret object.\n\t */\n\tstatic fromBase32(str) {\n\t\treturn new Secret({ buffer: base32ToBuf(str) });\n\t}\n\n\t/**\n\t * Converts a hexadecimal string to a Secret object.\n\t * @param {string} str Hexadecimal string.\n\t * @returns {Secret} Secret object.\n\t */\n\tstatic fromHex(str) {\n\t\treturn new Secret({ buffer: hexToBuf(str) });\n\t}\n\n\t/**\n\t * Latin-1 string representation of secret key.\n\t * @type {string}\n\t */\n\tget latin1() {\n\t\tObject.defineProperty(this, 'latin1', {\n\t\t\tenumerable: true,\n\t\t\tvalue: latin1FromBuf(this.buffer),\n\t\t});\n\n\t\treturn this.latin1;\n\t}\n\n\t/**\n\t * UTF-8 string representation of secret key.\n\t * @type {string}\n\t */\n\tget utf8() {\n\t\tObject.defineProperty(this, 'utf8', {\n\t\t\tenumerable: true,\n\t\t\tvalue: utf8FromBuf(this.buffer),\n\t\t});\n\n\t\treturn this.utf8;\n\t}\n\n\t/**\n\t * Base32 string representation of secret key.\n\t * @type {string}\n\t */\n\tget base32() {\n\t\tObject.defineProperty(this, 'base32', {\n\t\t\tenumerable: true,\n\t\t\tvalue: base32FromBuf(this.buffer),\n\t\t});\n\n\t\treturn this.base32;\n\t}\n\n\t/**\n\t * Hexadecimal string representation of secret key.\n\t * @type {string}\n\t */\n\tget hex() {\n\t\tObject.defineProperty(this, 'hex', {\n\t\t\tenumerable: true,\n\t\t\tvalue: hexFromBuf(this.buffer),\n\t\t});\n\n\t\treturn this.hex;\n\t}\n}\n\nexport { Secret };\n","import { globalThis } from '../global-this';\nimport { isNode } from '../is-node';\nimport { nodeRequire } from '../node-require';\n\nconst NodeBuffer = isNode ? globalThis.Buffer : undefined;\nconst NodeCrypto = isNode ? nodeRequire('crypto') : undefined;\n\n/**\n * Returns true if a is equal to b, without leaking timing information that would allow an attacker to guess one of the values.\n * @param {string} a String a.\n * @param {string} b String b.\n * @returns {boolean} Equality result.\n */\nconst timingSafeEqual = (a, b) => {\n\tif (isNode) {\n\t\treturn NodeCrypto.timingSafeEqual(NodeBuffer.from(a), NodeBuffer.from(b));\n\t} else {\n\t\tif (a.length !== b.length) {\n\t\t\tthrow new TypeError('Input strings must have the same length');\n\t\t}\n\t\tlet i = -1;\n\t\tlet out = 0;\n\t\twhile (++i < a.length) {\n\t\t\tout |= a.charCodeAt(i) ^ b.charCodeAt(i);\n\t\t}\n\t\treturn out === 0;\n\t}\n};\n\nexport { timingSafeEqual };\n","import { uintToBuf } from './utils/encoding/uint';\nimport { hmacDigest } from './utils/crypto/hmac-digest';\nimport { pad } from './utils/pad';\nimport { Secret } from './secret';\nimport { timingSafeEqual } from './utils/crypto/timing-safe-equal';\n\n/**\n * HOTP: An HMAC-based One-time Password Algorithm.\n * {@link https://tools.ietf.org/html/rfc4226|RFC 4226}\n */\nclass HOTP {\n\t/**\n\t * Default configuration.\n\t * @type {{\n\t *   issuer: string,\n\t *   label: string,\n\t *   algorithm: string,\n\t *   digits: number,\n\t *   counter: number\n\t *   window: number\n\t * }}\n\t */\n\tstatic get defaults() {\n\t\treturn {\n\t\t\tissuer: '',\n\t\t\tlabel: 'OTPAuth',\n\t\t\talgorithm: 'SHA1',\n\t\t\tdigits: 6,\n\t\t\tcounter: 0,\n\t\t\twindow: 1,\n\t\t};\n\t}\n\n\t/**\n\t * Creates an HOTP object.\n\t * @param {Object} [config] Configuration options.\n\t * @param {string} [config.issuer=''] Account provider.\n\t * @param {string} [config.label='OTPAuth'] Account label.\n\t * @param {Secret|string} [config.secret=Secret] Secret key.\n\t * @param {string} [config.algorithm='SHA1'] HMAC hashing algorithm.\n\t * @param {number} [config.digits=6] Token length.\n\t * @param {number} [config.counter=0] Initial counter value.\n\t */\n\tconstructor({\n\t\tissuer = HOTP.defaults.issuer,\n\t\tlabel = HOTP.defaults.label,\n\t\tsecret = new Secret(),\n\t\talgorithm = HOTP.defaults.algorithm,\n\t\tdigits = HOTP.defaults.digits,\n\t\tcounter = HOTP.defaults.counter,\n\t} = {}) {\n\t\t/**\n\t\t * Account provider.\n\t\t * @type {string}\n\t\t */\n\t\tthis.issuer = issuer;\n\t\t/**\n\t\t * Account label.\n\t\t * @type {string}\n\t\t */\n\t\tthis.label = label;\n\t\t/**\n\t\t * Secret key.\n\t\t * @type {Secret}\n\t\t */\n\t\tthis.secret = typeof secret === 'string'\n\t\t\t? Secret.fromBase32(secret)\n\t\t\t: secret;\n\t\t/**\n\t\t * HMAC hashing algorithm.\n\t\t * @type {string}\n\t\t */\n\t\tthis.algorithm = algorithm.toUpperCase();\n\t\t/**\n\t\t * Token length.\n\t\t * @type {number}\n\t\t */\n\t\tthis.digits = digits;\n\t\t/**\n\t\t * Initial counter value.\n\t\t * @type {number}\n\t\t */\n\t\tthis.counter = counter;\n\t}\n\n\t/**\n\t * Generates an HOTP token.\n\t * @param {Object} config Configuration options.\n\t * @param {Secret} config.secret Secret key.\n\t * @param {string} [config.algorithm='SHA1'] HMAC hashing algorithm.\n\t * @param {number} [config.digits=6] Token length.\n\t * @param {number} [config.counter=0] Counter value.\n\t * @returns {string} Token.\n\t */\n\tstatic generate({\n\t\tsecret,\n\t\talgorithm = HOTP.defaults.algorithm,\n\t\tdigits = HOTP.defaults.digits,\n\t\tcounter = HOTP.defaults.counter,\n\t}) {\n\t\tconst digest = new Uint8Array(hmacDigest(algorithm, secret.buffer, uintToBuf(counter)));\n\t\tconst offset = digest[digest.byteLength - 1] & 15;\n\t\tconst otp = (\n\t\t\t((digest[offset] & 127) << 24)\n\t\t\t| ((digest[offset + 1] & 255) << 16)\n\t\t\t| ((digest[offset + 2] & 255) << 8)\n\t\t\t| (digest[offset + 3] & 255)\n\t\t) % (10 ** digits);\n\n\t\treturn pad(otp, digits);\n\t}\n\n\t/**\n\t * Generates an HOTP token.\n\t * @param {Object} [config] Configuration options.\n\t * @param {number} [config.counter=this.counter++] Counter value.\n\t * @returns {string} Token.\n\t */\n\tgenerate({\n\t\tcounter = this.counter++,\n\t} = {}) {\n\t\treturn HOTP.generate({\n\t\t\tsecret: this.secret,\n\t\t\talgorithm: this.algorithm,\n\t\t\tdigits: this.digits,\n\t\t\tcounter,\n\t\t});\n\t}\n\n\t/**\n\t * Validates an HOTP token.\n\t * @param {Object} config Configuration options.\n\t * @param {string} config.token Token value.\n\t * @param {Secret} config.secret Secret key.\n\t * @param {string} [config.algorithm='SHA1'] HMAC hashing algorithm.\n\t * @param {number} config.digits Token length.\n\t * @param {number} [config.counter=0] Counter value.\n\t * @param {number} [config.window=1] Window of counter values to test.\n\t * @returns {number|null} Token delta, or null if the token is not found.\n\t */\n\tstatic validate({\n\t\ttoken,\n\t\tsecret,\n\t\talgorithm,\n\t\tdigits,\n\t\tcounter = HOTP.defaults.counter,\n\t\twindow = HOTP.defaults.window,\n\t}) {\n\t\t// Return early if the token length does not match the digit number.\n\t\tif (token.length !== digits) return null;\n\n\t\tlet delta = null;\n\n\t\tfor (let i = counter - window; i <= counter + window; ++i) {\n\t\t\tconst generatedToken = HOTP.generate({\n\t\t\t\tsecret,\n\t\t\t\talgorithm,\n\t\t\t\tdigits,\n\t\t\t\tcounter: i,\n\t\t\t});\n\n\t\t\tif (timingSafeEqual(token, generatedToken)) {\n\t\t\t\tdelta = i - counter;\n\t\t\t}\n\t\t}\n\n\t\treturn delta;\n\t}\n\n\t/**\n\t * Validates an HOTP token.\n\t * @param {Object} config Configuration options.\n\t * @param {string} config.token Token value.\n\t * @param {number} [config.counter=this.counter] Counter value.\n\t * @param {number} [config.window=1] Window of counter values to test.\n\t * @returns {number|null} Token delta, or null if the token is not found.\n\t */\n\tvalidate({\n\t\ttoken,\n\t\tcounter = this.counter,\n\t\twindow,\n\t}) {\n\t\treturn HOTP.validate({\n\t\t\ttoken,\n\t\t\tsecret: this.secret,\n\t\t\talgorithm: this.algorithm,\n\t\t\tdigits: this.digits,\n\t\t\tcounter,\n\t\t\twindow,\n\t\t});\n\t}\n\n\t/**\n\t * Returns a Google Authenticator key URI.\n\t * @returns {string} URI.\n\t */\n\ttoString() {\n\t\tconst e = encodeURIComponent;\n\t\treturn 'otpauth://hotp/'\n\t\t\t+ `${this.issuer.length > 0\n\t\t\t\t? `${e(this.issuer)}:${e(this.label)}?issuer=${e(this.issuer)}&`\n\t\t\t\t: `${e(this.label)}?`}`\n\t\t\t+ `secret=${e(this.secret.base32)}&`\n\t\t\t+ `algorithm=${e(this.algorithm)}&`\n\t\t\t+ `digits=${e(this.digits)}&`\n\t\t\t+ `counter=${e(this.counter)}`;\n\t}\n}\n\nexport { HOTP };\n","import { HOTP } from './hotp';\nimport { Secret } from './secret';\n\n/**\n * TOTP: Time-Based One-Time Password Algorithm.\n * {@link https://tools.ietf.org/html/rfc6238|RFC 6238}\n */\nclass TOTP {\n\t/**\n\t * Default configuration.\n\t * @type {{\n\t *   issuer: string,\n\t *   label: string,\n\t *   algorithm: string,\n\t *   digits: number,\n\t *   period: number\n\t *   window: number\n\t * }}\n\t */\n\tstatic get defaults() {\n\t\treturn {\n\t\t\tissuer: '',\n\t\t\tlabel: 'OTPAuth',\n\t\t\talgorithm: 'SHA1',\n\t\t\tdigits: 6,\n\t\t\tperiod: 30,\n\t\t\twindow: 1,\n\t\t};\n\t}\n\n\t/**\n\t * Creates a TOTP object.\n\t * @param {Object} [config] Configuration options.\n\t * @param {string} [config.issuer=''] Account provider.\n\t * @param {string} [config.label='OTPAuth'] Account label.\n\t * @param {Secret|string} [config.secret=Secret] Secret key.\n\t * @param {string} [config.algorithm='SHA1'] HMAC hashing algorithm.\n\t * @param {number} [config.digits=6] Token length.\n\t * @param {number} [config.period=30] Token time-step duration.\n\t */\n\tconstructor({\n\t\tissuer = TOTP.defaults.issuer,\n\t\tlabel = TOTP.defaults.label,\n\t\tsecret = new Secret(),\n\t\talgorithm = TOTP.defaults.algorithm,\n\t\tdigits = TOTP.defaults.digits,\n\t\tperiod = TOTP.defaults.period,\n\t} = {}) {\n\t\t/**\n\t\t * Account provider.\n\t\t * @type {string}\n\t\t */\n\t\tthis.issuer = issuer;\n\t\t/**\n\t\t * Account label.\n\t\t * @type {string}\n\t\t */\n\t\tthis.label = label;\n\t\t/**\n\t\t * Secret key.\n\t\t * @type {Secret}\n\t\t */\n\t\tthis.secret = typeof secret === 'string'\n\t\t\t? Secret.fromBase32(secret)\n\t\t\t: secret;\n\t\t/**\n\t\t * HMAC hashing algorithm.\n\t\t * @type {string}\n\t\t */\n\t\tthis.algorithm = algorithm.toUpperCase();\n\t\t/**\n\t\t * Token length.\n\t\t * @type {number}\n\t\t */\n\t\tthis.digits = digits;\n\t\t/**\n\t\t * Token time-step duration.\n\t\t * @type {number}\n\t\t */\n\t\tthis.period = period;\n\t}\n\n\t/**\n\t * Generates a TOTP token.\n\t * @param {Object} config Configuration options.\n\t * @param {Secret} config.secret Secret key.\n\t * @param {string} [config.algorithm='SHA1'] HMAC hashing algorithm.\n\t * @param {number} [config.digits=6] Token length.\n\t * @param {number} [config.period=30] Token time-step duration.\n\t * @param {number} [config.timestamp=Date.now] Timestamp value in milliseconds.\n\t * @returns {string} Token.\n\t */\n\tstatic generate({\n\t\tsecret,\n\t\talgorithm,\n\t\tdigits,\n\t\tperiod = TOTP.defaults.period,\n\t\ttimestamp = Date.now(),\n\t}) {\n\t\treturn HOTP.generate({\n\t\t\tsecret,\n\t\t\talgorithm,\n\t\t\tdigits,\n\t\t\tcounter: Math.floor(timestamp / 1000 / period),\n\t\t});\n\t}\n\n\t/**\n\t * Generates a TOTP token.\n\t * @param {Object} [config] Configuration options.\n\t * @param {number} [config.timestamp=Date.now] Timestamp value in milliseconds.\n\t * @returns {string} Token.\n\t */\n\tgenerate({\n\t\ttimestamp = Date.now(),\n\t} = {}) {\n\t\treturn TOTP.generate({\n\t\t\tsecret: this.secret,\n\t\t\talgorithm: this.algorithm,\n\t\t\tdigits: this.digits,\n\t\t\tperiod: this.period,\n\t\t\ttimestamp,\n\t\t});\n\t}\n\n\t/**\n\t * Validates a TOTP token.\n\t * @param {Object} config Configuration options.\n\t * @param {string} config.token Token value.\n\t * @param {Secret} config.secret Secret key.\n\t * @param {string} [config.algorithm='SHA1'] HMAC hashing algorithm.\n\t * @param {number} config.digits Token length.\n\t * @param {number} [config.period=30] Token time-step duration.\n\t * @param {number} [config.timestamp=Date.now] Timestamp value in milliseconds.\n\t * @param {number} [config.window=1] Window of counter values to test.\n\t * @returns {number|null} Token delta, or null if the token is not found.\n\t */\n\tstatic validate({\n\t\ttoken,\n\t\tsecret,\n\t\talgorithm,\n\t\tdigits,\n\t\tperiod = TOTP.defaults.period,\n\t\ttimestamp = Date.now(),\n\t\twindow,\n\t}) {\n\t\treturn HOTP.validate({\n\t\t\ttoken,\n\t\t\tsecret,\n\t\t\talgorithm,\n\t\t\tdigits,\n\t\t\tcounter: Math.floor(timestamp / 1000 / period),\n\t\t\twindow,\n\t\t});\n\t}\n\n\t/**\n\t * Validates a TOTP token.\n\t * @param {Object} config Configuration options.\n\t * @param {string} config.token Token value.\n\t * @param {number} [config.timestamp=Date.now] Timestamp value in milliseconds.\n\t * @param {number} [config.window=1] Window of counter values to test.\n\t * @returns {number|null} Token delta, or null if the token is not found.\n\t */\n\tvalidate({\n\t\ttoken,\n\t\ttimestamp,\n\t\twindow,\n\t}) {\n\t\treturn TOTP.validate({\n\t\t\ttoken,\n\t\t\tsecret: this.secret,\n\t\t\talgorithm: this.algorithm,\n\t\t\tdigits: this.digits,\n\t\t\tperiod: this.period,\n\t\t\ttimestamp,\n\t\t\twindow,\n\t\t});\n\t}\n\n\t/**\n\t * Returns a Google Authenticator key URI.\n\t * @returns {string} URI.\n\t */\n\ttoString() {\n\t\tconst e = encodeURIComponent;\n\t\treturn 'otpauth://totp/'\n\t\t\t+ `${this.issuer.length > 0\n\t\t\t\t? `${e(this.issuer)}:${e(this.label)}?issuer=${e(this.issuer)}&`\n\t\t\t\t: `${e(this.label)}?`}`\n\t\t\t+ `secret=${e(this.secret.base32)}&`\n\t\t\t+ `algorithm=${e(this.algorithm)}&`\n\t\t\t+ `digits=${e(this.digits)}&`\n\t\t\t+ `period=${e(this.period)}`;\n\t}\n}\n\nexport { TOTP };\n","import { HOTP } from './hotp';\nimport { TOTP } from './totp';\n\n/**\n * Key URI regex (otpauth://TYPE/[ISSUER:]LABEL?PARAMETERS).\n * @type {RegExp}\n */\nconst OTPURI_REGEX = /^otpauth:\\/\\/([ht]otp)\\/(.+)\\?((?:&?[A-Z0-9.~_-]+=[^&]*)+)$/i;\n\n/**\n * RFC 4648 base32 alphabet with pad.\n * @type {RegExp}\n */\nconst SECRET_REGEX = /^[2-7A-Z]+=*$/i;\n\n/**\n * Regex for supported algorithms.\n * @type {RegExp}\n */\nconst ALGORITHM_REGEX = /^SHA(?:1|224|256|384|512|3-224|3-256|3-384|3-512)$/i;\n\n/**\n * Integer regex.\n * @type {RegExp}\n */\nconst INTEGER_REGEX = /^[+-]?\\d+$/;\n\n/**\n * Positive integer regex.\n * @type {RegExp}\n */\nconst POSITIVE_INTEGER_REGEX = /^\\+?[1-9]\\d*$/;\n\n/**\n * HOTP/TOTP object/string conversion.\n * {@link https://github.com/google/google-authenticator/wiki/Key-Uri-Format|Key URI Format}\n */\nclass URI {\n\t/**\n\t * Parses a Google Authenticator key URI and returns an HOTP/TOTP object.\n\t * @param {string} uri Google Authenticator Key URI.\n\t * @returns {HOTP|TOTP} HOTP/TOTP object.\n\t */\n\tstatic parse(uri) {\n\t\tlet uriGroups;\n\n\t\ttry {\n\t\t\turiGroups = uri.match(OTPURI_REGEX);\n\t\t} catch (error) { /* Handled below */ }\n\n\t\tif (!Array.isArray(uriGroups)) {\n\t\t\tthrow new URIError('Invalid URI format');\n\t\t}\n\n\t\t// Extract URI groups.\n\t\tconst uriType = uriGroups[1].toLowerCase();\n\t\tconst uriLabel = uriGroups[2].split(/:(.+)/, 2).map(decodeURIComponent);\n\t\t/** @type {Object.<string, string>} */\n\t\tconst uriParams = uriGroups[3].split('&').reduce((acc, cur) => {\n\t\t\tconst pairArr = cur.split(/=(.*)/, 2).map(decodeURIComponent);\n\t\t\tconst pairKey = pairArr[0].toLowerCase();\n\t\t\tconst pairVal = pairArr[1];\n\t\t\t/** @type {Object.<string, string>} */\n\t\t\tconst pairAcc = acc;\n\n\t\t\tpairAcc[pairKey] = pairVal;\n\t\t\treturn pairAcc;\n\t\t}, {});\n\n\t\t// 'OTP' will be instantiated with 'config' argument.\n\t\tlet OTP;\n\t\tconst config = {};\n\n\t\tif (uriType === 'hotp') {\n\t\t\tOTP = HOTP;\n\n\t\t\t// Counter: required\n\t\t\tif (typeof uriParams.counter !== 'undefined' && INTEGER_REGEX.test(uriParams.counter)) {\n\t\t\t\tconfig.counter = parseInt(uriParams.counter, 10);\n\t\t\t} else {\n\t\t\t\tthrow new TypeError('Missing or invalid \\'counter\\' parameter');\n\t\t\t}\n\t\t} else if (uriType === 'totp') {\n\t\t\tOTP = TOTP;\n\n\t\t\t// Period: optional\n\t\t\tif (typeof uriParams.period !== 'undefined') {\n\t\t\t\tif (POSITIVE_INTEGER_REGEX.test(uriParams.period)) {\n\t\t\t\t\tconfig.period = parseInt(uriParams.period, 10);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new TypeError('Invalid \\'period\\' parameter');\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Unknown OTP type');\n\t\t}\n\n\t\t// Label: required\n\t\t// Issuer: optional\n\t\tif (uriLabel.length === 2) {\n\t\t\tconfig.label = uriLabel[1];\n\t\t\tif (typeof uriParams.issuer === 'undefined') {\n\t\t\t\tconfig.issuer = uriLabel[0];\n\t\t\t} else if (uriParams.issuer === uriLabel[0]) {\n\t\t\t\tconfig.issuer = uriParams.issuer;\n\t\t\t} else {\n\t\t\t\tthrow new TypeError('Invalid \\'issuer\\' parameter');\n\t\t\t}\n\t\t} else {\n\t\t\tconfig.label = uriLabel[0];\n\t\t\tif (typeof uriParams.issuer !== 'undefined') {\n\t\t\t\tconfig.issuer = uriParams.issuer;\n\t\t\t}\n\t\t}\n\n\t\t// Secret: required\n\t\tif (typeof uriParams.secret !== 'undefined' && SECRET_REGEX.test(uriParams.secret)) {\n\t\t\tconfig.secret = uriParams.secret;\n\t\t} else {\n\t\t\tthrow new TypeError('Missing or invalid \\'secret\\' parameter');\n\t\t}\n\n\t\t// Algorithm: optional\n\t\tif (typeof uriParams.algorithm !== 'undefined') {\n\t\t\tif (ALGORITHM_REGEX.test(uriParams.algorithm)) {\n\t\t\t\tconfig.algorithm = uriParams.algorithm;\n\t\t\t} else {\n\t\t\t\tthrow new TypeError('Invalid \\'algorithm\\' parameter');\n\t\t\t}\n\t\t}\n\n\t\t// Digits: optional\n\t\tif (typeof uriParams.digits !== 'undefined') {\n\t\t\tif (POSITIVE_INTEGER_REGEX.test(uriParams.digits)) {\n\t\t\t\tconfig.digits = parseInt(uriParams.digits, 10);\n\t\t\t} else {\n\t\t\t\tthrow new TypeError('Invalid \\'digits\\' parameter');\n\t\t\t}\n\t\t}\n\n\t\treturn new OTP(config);\n\t}\n\n\t/**\n\t * Converts an HOTP/TOTP object to a Google Authenticator key URI.\n\t * @param {HOTP|TOTP} otp HOTP/TOTP object.\n\t * @returns {string} Google Authenticator Key URI.\n\t */\n\tstatic stringify(otp) {\n\t\tif (otp instanceof HOTP || otp instanceof TOTP) {\n\t\t\treturn otp.toString();\n\t\t}\n\n\t\tthrow new TypeError('Invalid \\'HOTP/TOTP\\' object');\n\t}\n}\n\nexport { URI };\n","/**\n * Library version.\n * @type {string}\n */\nconst version = '__OTPAUTH_VERSION__';\n\nexport { version };\n"],"names":["uintToBuf","num","buf","ArrayBuffer","arr","Uint8Array","acc","i","b64Tab","uint8array2packed","existingPacked","existingPackedLen","bigEndianMod","intOffset","byteOffset","packed","existingByteLen","shiftModifier","length","push","value","binLen","getStrConverter","format","utfType","Error","str","existingBin","existingBinLen","parseInt","substr","isNaN","codePnt","codePntArr","j","transposeBytes","byteCnt","charCodeAt","tmpInt","strPart","firstEqual","indexOf","search","replace","charAt","ignore","getOutputConverter","outputBinLen","outputOptions","binarray","outputLength","formatOpts","srcByte","outputUpper","toUpperCase","triplet","int1","int2","b64Pad","String","fromCharCode","retVal","arrView","globalThis","_typeof","Object","defineProperty","prototype","get","this","configurable","__GLOBALTHIS__","self","window","global","isNode","toString","call","process","nodeRequire","eval","NodeBuffer","Buffer","undefined","NodeCrypto","OPENSSL_TO_JSSHA_ALGO","hmacDigest","algorithm","key","message","hmac","createHmac","from","update","digest","buffer","variant","TypeError","jsSHA","setHMACKey","getHMAC","pad","digits","prefix","repeat","ALPHABET","base32ToBuf","cstr","bits","index","idx","base32FromBuf","hexToBuf","hexFromBuf","hex","latin1ToBuf","latin1FromBuf","ENCODER","TextEncoder","DECODER","TextDecoder","utf8ToBuf","encode","utf8FromBuf","decode","BrowserCrypto","crypto","msCrypto","randomBytes","size","getRandomValues","Secret","enumerable","latin1","utf8","base32","timingSafeEqual","a","b","out","HOTP","issuer","defaults","label","secret","counter","fromBase32","generate","token","validate","e","encodeURIComponent","offset","byteLength","otp","delta","generatedToken","TOTP","period","timestamp","Date","now","Math","floor","OTPURI_REGEX","SECRET_REGEX","ALGORITHM_REGEX","INTEGER_REGEX","POSITIVE_INTEGER_REGEX","URI","uri","uriGroups","match","error","Array","isArray","URIError","OTP","uriType","toLowerCase","uriLabel","split","map","decodeURIComponent","uriParams","reduce","cur","pairArr","pairKey","pairVal","pairAcc","config","test","version"],"mappings":"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"}